// Code generated by moshi-kotlin-codegen. Do not edit.
@file:Suppress("DEPRECATION", "unused", "ClassName", "REDUNDANT_PROJECTION",
    "RedundantExplicitType", "LocalVariableName", "RedundantVisibilityModifier",
    "PLATFORM_CLASS_MAPPED_TO_KOTLIN")

package com.rikai.exercise.model

import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import com.squareup.moshi.`internal`.Util
import java.lang.NullPointerException
import kotlin.Boolean
import kotlin.String
import kotlin.Suppress
import kotlin.Unit
import kotlin.collections.emptySet
import kotlin.text.buildString

public class UserProfileJsonAdapter(
  moshi: Moshi
) : JsonAdapter<UserProfile>() {
  private val options: JsonReader.Options = JsonReader.Options.of("avatar_url", "name", "bio",
      "login", "site_admin", "location", "blog")

  private val nullableStringAdapter: JsonAdapter<String?> = moshi.adapter(String::class.java,
      emptySet(), "avatar_url")

  private val booleanAdapter: JsonAdapter<Boolean> = moshi.adapter(Boolean::class.java, emptySet(),
      "site_admin")

  public override fun toString(): String = buildString(33) {
      append("GeneratedJsonAdapter(").append("UserProfile").append(')') }

  public override fun fromJson(reader: JsonReader): UserProfile {
    var avatar_url: String? = null
    var name: String? = null
    var bio: String? = null
    var login: String? = null
    var site_admin: Boolean? = null
    var location: String? = null
    var blog: String? = null
    reader.beginObject()
    while (reader.hasNext()) {
      when (reader.selectName(options)) {
        0 -> avatar_url = nullableStringAdapter.fromJson(reader)
        1 -> name = nullableStringAdapter.fromJson(reader)
        2 -> bio = nullableStringAdapter.fromJson(reader)
        3 -> login = nullableStringAdapter.fromJson(reader)
        4 -> site_admin = booleanAdapter.fromJson(reader) ?: throw Util.unexpectedNull("site_admin",
            "site_admin", reader)
        5 -> location = nullableStringAdapter.fromJson(reader)
        6 -> blog = nullableStringAdapter.fromJson(reader)
        -1 -> {
          // Unknown name, skip it.
          reader.skipName()
          reader.skipValue()
        }
      }
    }
    reader.endObject()
    return UserProfile(
        avatar_url = avatar_url,
        name = name,
        bio = bio,
        login = login,
        site_admin = site_admin ?: throw Util.missingProperty("site_admin", "site_admin", reader),
        location = location,
        blog = blog
    )
  }

  public override fun toJson(writer: JsonWriter, value_: UserProfile?): Unit {
    if (value_ == null) {
      throw NullPointerException("value_ was null! Wrap in .nullSafe() to write nullable values.")
    }
    writer.beginObject()
    writer.name("avatar_url")
    nullableStringAdapter.toJson(writer, value_.avatar_url)
    writer.name("name")
    nullableStringAdapter.toJson(writer, value_.name)
    writer.name("bio")
    nullableStringAdapter.toJson(writer, value_.bio)
    writer.name("login")
    nullableStringAdapter.toJson(writer, value_.login)
    writer.name("site_admin")
    booleanAdapter.toJson(writer, value_.site_admin)
    writer.name("location")
    nullableStringAdapter.toJson(writer, value_.location)
    writer.name("blog")
    nullableStringAdapter.toJson(writer, value_.blog)
    writer.endObject()
  }
}
